// Generated by view binder compiler. Do not edit!
package com.example.stustay.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.stustay.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityProfileBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView avatarImageView;

  @NonNull
  public final LinearLayout buttonsLayout;

  @NonNull
  public final Button deconnecterButton;

  @NonNull
  public final Button modifierProfilButton;

  @NonNull
  public final TextView nameTextView;

  @NonNull
  public final TextView rolesTextView;

  private ActivityProfileBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView avatarImageView, @NonNull LinearLayout buttonsLayout,
      @NonNull Button deconnecterButton, @NonNull Button modifierProfilButton,
      @NonNull TextView nameTextView, @NonNull TextView rolesTextView) {
    this.rootView = rootView;
    this.avatarImageView = avatarImageView;
    this.buttonsLayout = buttonsLayout;
    this.deconnecterButton = deconnecterButton;
    this.modifierProfilButton = modifierProfilButton;
    this.nameTextView = nameTextView;
    this.rolesTextView = rolesTextView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.avatarImageView;
      ImageView avatarImageView = ViewBindings.findChildViewById(rootView, id);
      if (avatarImageView == null) {
        break missingId;
      }

      id = R.id.buttonsLayout;
      LinearLayout buttonsLayout = ViewBindings.findChildViewById(rootView, id);
      if (buttonsLayout == null) {
        break missingId;
      }

      id = R.id.deconnecterButton;
      Button deconnecterButton = ViewBindings.findChildViewById(rootView, id);
      if (deconnecterButton == null) {
        break missingId;
      }

      id = R.id.modifierProfilButton;
      Button modifierProfilButton = ViewBindings.findChildViewById(rootView, id);
      if (modifierProfilButton == null) {
        break missingId;
      }

      id = R.id.nameTextView;
      TextView nameTextView = ViewBindings.findChildViewById(rootView, id);
      if (nameTextView == null) {
        break missingId;
      }

      id = R.id.rolesTextView;
      TextView rolesTextView = ViewBindings.findChildViewById(rootView, id);
      if (rolesTextView == null) {
        break missingId;
      }

      return new ActivityProfileBinding((ConstraintLayout) rootView, avatarImageView, buttonsLayout,
          deconnecterButton, modifierProfilButton, nameTextView, rolesTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
