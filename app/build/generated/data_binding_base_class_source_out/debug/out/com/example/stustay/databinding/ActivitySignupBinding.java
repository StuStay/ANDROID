// Generated by view binder compiler. Do not edit!
package com.example.stustay.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.stustay.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySignupBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextInputEditText ageEditText;

  @NonNull
  public final TextInputLayout ageTextInputLayout;

  @NonNull
  public final TextInputEditText emailEditText;

  @NonNull
  public final TextInputLayout emailTextInputLayout;

  @NonNull
  public final TextInputEditText genderEditText;

  @NonNull
  public final TextInputLayout genderTextInputLayout;

  @NonNull
  public final TextInputEditText lastNameEditText;

  @NonNull
  public final TextInputLayout lastNameTextInputLayout;

  @NonNull
  public final ImageView logoImageView;

  @NonNull
  public final TextInputEditText nameEditText;

  @NonNull
  public final TextInputLayout nameTextInputLayout;

  @NonNull
  public final TextInputEditText passwordEditText;

  @NonNull
  public final TextInputLayout passwordTextInputLayout;

  @NonNull
  public final TextInputEditText phoneEditText;

  @NonNull
  public final TextInputLayout phoneTextInputLayout;

  @NonNull
  public final Spinner rolesSpinner;

  @NonNull
  public final Button signUpButton;

  private ActivitySignupBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextInputEditText ageEditText, @NonNull TextInputLayout ageTextInputLayout,
      @NonNull TextInputEditText emailEditText, @NonNull TextInputLayout emailTextInputLayout,
      @NonNull TextInputEditText genderEditText, @NonNull TextInputLayout genderTextInputLayout,
      @NonNull TextInputEditText lastNameEditText, @NonNull TextInputLayout lastNameTextInputLayout,
      @NonNull ImageView logoImageView, @NonNull TextInputEditText nameEditText,
      @NonNull TextInputLayout nameTextInputLayout, @NonNull TextInputEditText passwordEditText,
      @NonNull TextInputLayout passwordTextInputLayout, @NonNull TextInputEditText phoneEditText,
      @NonNull TextInputLayout phoneTextInputLayout, @NonNull Spinner rolesSpinner,
      @NonNull Button signUpButton) {
    this.rootView = rootView;
    this.ageEditText = ageEditText;
    this.ageTextInputLayout = ageTextInputLayout;
    this.emailEditText = emailEditText;
    this.emailTextInputLayout = emailTextInputLayout;
    this.genderEditText = genderEditText;
    this.genderTextInputLayout = genderTextInputLayout;
    this.lastNameEditText = lastNameEditText;
    this.lastNameTextInputLayout = lastNameTextInputLayout;
    this.logoImageView = logoImageView;
    this.nameEditText = nameEditText;
    this.nameTextInputLayout = nameTextInputLayout;
    this.passwordEditText = passwordEditText;
    this.passwordTextInputLayout = passwordTextInputLayout;
    this.phoneEditText = phoneEditText;
    this.phoneTextInputLayout = phoneTextInputLayout;
    this.rolesSpinner = rolesSpinner;
    this.signUpButton = signUpButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySignupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySignupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_signup, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySignupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ageEditText;
      TextInputEditText ageEditText = ViewBindings.findChildViewById(rootView, id);
      if (ageEditText == null) {
        break missingId;
      }

      id = R.id.ageTextInputLayout;
      TextInputLayout ageTextInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (ageTextInputLayout == null) {
        break missingId;
      }

      id = R.id.emailEditText;
      TextInputEditText emailEditText = ViewBindings.findChildViewById(rootView, id);
      if (emailEditText == null) {
        break missingId;
      }

      id = R.id.emailTextInputLayout;
      TextInputLayout emailTextInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (emailTextInputLayout == null) {
        break missingId;
      }

      id = R.id.genderEditText;
      TextInputEditText genderEditText = ViewBindings.findChildViewById(rootView, id);
      if (genderEditText == null) {
        break missingId;
      }

      id = R.id.genderTextInputLayout;
      TextInputLayout genderTextInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (genderTextInputLayout == null) {
        break missingId;
      }

      id = R.id.lastNameEditText;
      TextInputEditText lastNameEditText = ViewBindings.findChildViewById(rootView, id);
      if (lastNameEditText == null) {
        break missingId;
      }

      id = R.id.lastNameTextInputLayout;
      TextInputLayout lastNameTextInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (lastNameTextInputLayout == null) {
        break missingId;
      }

      id = R.id.logoImageView;
      ImageView logoImageView = ViewBindings.findChildViewById(rootView, id);
      if (logoImageView == null) {
        break missingId;
      }

      id = R.id.nameEditText;
      TextInputEditText nameEditText = ViewBindings.findChildViewById(rootView, id);
      if (nameEditText == null) {
        break missingId;
      }

      id = R.id.nameTextInputLayout;
      TextInputLayout nameTextInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (nameTextInputLayout == null) {
        break missingId;
      }

      id = R.id.passwordEditText;
      TextInputEditText passwordEditText = ViewBindings.findChildViewById(rootView, id);
      if (passwordEditText == null) {
        break missingId;
      }

      id = R.id.passwordTextInputLayout;
      TextInputLayout passwordTextInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (passwordTextInputLayout == null) {
        break missingId;
      }

      id = R.id.phoneEditText;
      TextInputEditText phoneEditText = ViewBindings.findChildViewById(rootView, id);
      if (phoneEditText == null) {
        break missingId;
      }

      id = R.id.phoneTextInputLayout;
      TextInputLayout phoneTextInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (phoneTextInputLayout == null) {
        break missingId;
      }

      id = R.id.rolesSpinner;
      Spinner rolesSpinner = ViewBindings.findChildViewById(rootView, id);
      if (rolesSpinner == null) {
        break missingId;
      }

      id = R.id.signUpButton;
      Button signUpButton = ViewBindings.findChildViewById(rootView, id);
      if (signUpButton == null) {
        break missingId;
      }

      return new ActivitySignupBinding((ConstraintLayout) rootView, ageEditText, ageTextInputLayout,
          emailEditText, emailTextInputLayout, genderEditText, genderTextInputLayout,
          lastNameEditText, lastNameTextInputLayout, logoImageView, nameEditText,
          nameTextInputLayout, passwordEditText, passwordTextInputLayout, phoneEditText,
          phoneTextInputLayout, rolesSpinner, signUpButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
