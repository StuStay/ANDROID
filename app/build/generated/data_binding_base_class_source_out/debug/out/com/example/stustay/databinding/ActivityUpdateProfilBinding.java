// Generated by view binder compiler. Do not edit!
package com.example.stustay.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.stustay.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUpdateProfilBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextInputEditText ageEditText1;

  @NonNull
  public final TextInputLayout ageTextInputLayout;

  @NonNull
  public final TextInputEditText emailEditText1;

  @NonNull
  public final TextInputLayout emailTextInputLayout;

  @NonNull
  public final TextInputEditText genderEditText1;

  @NonNull
  public final TextInputLayout genderTextInputLayout;

  @NonNull
  public final TextInputEditText lastNameEditText1;

  @NonNull
  public final TextInputLayout lastNameTextInputLayout;

  @NonNull
  public final TextInputEditText nameEditText1;

  @NonNull
  public final TextInputLayout nameTextInputLayout;

  @NonNull
  public final TextInputEditText passwordEditText1;

  @NonNull
  public final TextInputLayout passwordTextInputLayout;

  @NonNull
  public final TextInputEditText phoneEditText1;

  @NonNull
  public final TextInputLayout phoneTextInputLayout;

  @NonNull
  public final Spinner rolesSpinner1;

  @NonNull
  public final Button updatebutton;

  private ActivityUpdateProfilBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextInputEditText ageEditText1, @NonNull TextInputLayout ageTextInputLayout,
      @NonNull TextInputEditText emailEditText1, @NonNull TextInputLayout emailTextInputLayout,
      @NonNull TextInputEditText genderEditText1, @NonNull TextInputLayout genderTextInputLayout,
      @NonNull TextInputEditText lastNameEditText1,
      @NonNull TextInputLayout lastNameTextInputLayout, @NonNull TextInputEditText nameEditText1,
      @NonNull TextInputLayout nameTextInputLayout, @NonNull TextInputEditText passwordEditText1,
      @NonNull TextInputLayout passwordTextInputLayout, @NonNull TextInputEditText phoneEditText1,
      @NonNull TextInputLayout phoneTextInputLayout, @NonNull Spinner rolesSpinner1,
      @NonNull Button updatebutton) {
    this.rootView = rootView;
    this.ageEditText1 = ageEditText1;
    this.ageTextInputLayout = ageTextInputLayout;
    this.emailEditText1 = emailEditText1;
    this.emailTextInputLayout = emailTextInputLayout;
    this.genderEditText1 = genderEditText1;
    this.genderTextInputLayout = genderTextInputLayout;
    this.lastNameEditText1 = lastNameEditText1;
    this.lastNameTextInputLayout = lastNameTextInputLayout;
    this.nameEditText1 = nameEditText1;
    this.nameTextInputLayout = nameTextInputLayout;
    this.passwordEditText1 = passwordEditText1;
    this.passwordTextInputLayout = passwordTextInputLayout;
    this.phoneEditText1 = phoneEditText1;
    this.phoneTextInputLayout = phoneTextInputLayout;
    this.rolesSpinner1 = rolesSpinner1;
    this.updatebutton = updatebutton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUpdateProfilBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUpdateProfilBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_update_profil, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUpdateProfilBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ageEditText1;
      TextInputEditText ageEditText1 = ViewBindings.findChildViewById(rootView, id);
      if (ageEditText1 == null) {
        break missingId;
      }

      id = R.id.ageTextInputLayout;
      TextInputLayout ageTextInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (ageTextInputLayout == null) {
        break missingId;
      }

      id = R.id.emailEditText1;
      TextInputEditText emailEditText1 = ViewBindings.findChildViewById(rootView, id);
      if (emailEditText1 == null) {
        break missingId;
      }

      id = R.id.emailTextInputLayout;
      TextInputLayout emailTextInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (emailTextInputLayout == null) {
        break missingId;
      }

      id = R.id.genderEditText1;
      TextInputEditText genderEditText1 = ViewBindings.findChildViewById(rootView, id);
      if (genderEditText1 == null) {
        break missingId;
      }

      id = R.id.genderTextInputLayout;
      TextInputLayout genderTextInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (genderTextInputLayout == null) {
        break missingId;
      }

      id = R.id.lastNameEditText1;
      TextInputEditText lastNameEditText1 = ViewBindings.findChildViewById(rootView, id);
      if (lastNameEditText1 == null) {
        break missingId;
      }

      id = R.id.lastNameTextInputLayout;
      TextInputLayout lastNameTextInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (lastNameTextInputLayout == null) {
        break missingId;
      }

      id = R.id.nameEditText1;
      TextInputEditText nameEditText1 = ViewBindings.findChildViewById(rootView, id);
      if (nameEditText1 == null) {
        break missingId;
      }

      id = R.id.nameTextInputLayout;
      TextInputLayout nameTextInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (nameTextInputLayout == null) {
        break missingId;
      }

      id = R.id.passwordEditText1;
      TextInputEditText passwordEditText1 = ViewBindings.findChildViewById(rootView, id);
      if (passwordEditText1 == null) {
        break missingId;
      }

      id = R.id.passwordTextInputLayout;
      TextInputLayout passwordTextInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (passwordTextInputLayout == null) {
        break missingId;
      }

      id = R.id.phoneEditText1;
      TextInputEditText phoneEditText1 = ViewBindings.findChildViewById(rootView, id);
      if (phoneEditText1 == null) {
        break missingId;
      }

      id = R.id.phoneTextInputLayout;
      TextInputLayout phoneTextInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (phoneTextInputLayout == null) {
        break missingId;
      }

      id = R.id.rolesSpinner1;
      Spinner rolesSpinner1 = ViewBindings.findChildViewById(rootView, id);
      if (rolesSpinner1 == null) {
        break missingId;
      }

      id = R.id.updatebutton;
      Button updatebutton = ViewBindings.findChildViewById(rootView, id);
      if (updatebutton == null) {
        break missingId;
      }

      return new ActivityUpdateProfilBinding((ConstraintLayout) rootView, ageEditText1,
          ageTextInputLayout, emailEditText1, emailTextInputLayout, genderEditText1,
          genderTextInputLayout, lastNameEditText1, lastNameTextInputLayout, nameEditText1,
          nameTextInputLayout, passwordEditText1, passwordTextInputLayout, phoneEditText1,
          phoneTextInputLayout, rolesSpinner1, updatebutton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
